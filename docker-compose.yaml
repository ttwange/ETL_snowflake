version: "3.7"
services:
  postgres:
    image: debezium/postgres:13
    container_name: postgres
    hostname: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - 5431:5432
    networks:
      energy:

  pgadmin:
    image: dpage/pgadmin4:7.6
    environment: 
      - PGADMIN_DEFAULT_EMAIL=pgadmin4@pgadmin.org
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - '5050:80'
    restart: always
    networks:
      energy:

  zookeeper:
      image: confluentinc/cp-zookeeper:7.6.0
      hostname: zookeeper
      container_name: zookeeper
      ports:
        - '2181:2181'
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000
      healthcheck:
        test: ['CMD', 'bash', '-c', "echo 'ruok' | nc localhost 2181"]
        interval: 10s
        timeout: 5s
        retries: 5 
      networks:
        energy:

  broker:
      image: confluentinc/cp-enterprise-kafka:7.5.3
      hostname: broker
      container_name: broker
      depends_on:
        zookeeper:
          condition: service_healthy
      ports:
        - '29092:29092'
        - '9092:9092'
        - '9101:9101'
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
        KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
        KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
        KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
        KAFKA_JMX_PORT: 9101
        KAFKA_JMX_HOSTNAME: localhost
        KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
        CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
        CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
        CONFLUENT_METRICS_ENABLE: "false"
        CONFLUENT_SUPPORT_CUSTOMER_ID: anonymous
      healthcheck:
        test: [ "CMD", "bash", "-c", 'nc -z localhost 9092' ]
        interval: 10s
        timeout: 5s
        retries: 5
      networks:
        energy:

  debezium:
    image: debezium/connect:1.4
    container_name: debezium
    hostname: debezium
    depends_on:
      broker:
        condition: service_healthy
    ports:
      - '8093:8083'
    environment:
      BOOTSTRAP_SERVERS: broker:29092
      CONNECT_REST_ADVERTISED_HOST_NAME: debezium
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      STATUS_STORAGE_TOPIC: connect_statuses
      OFFSET_STORAGE_TOPIC: connect_offsets
      KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      ENABLE_DEBEZIUM_SCRIPTING: 'true'
    healthcheck:
      test:
        [ 'CMD', 'curl', '--silent', '--fail', '-X', 'GET', 'http://localhost:8083/connectors', ]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      energy:

  schema-registry:
      image: confluentinc/cp-schema-registry:7.5.3
      hostname: cdc-schema-registry
      container_name: cdc-schema-registry
      depends_on:
        broker:
          condition: service_healthy
      ports:
        - '8081:8081'
      environment:
        SCHEMA_REGISTRY_HOST_NAME: schema-registry
        SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: broker:29092
        SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      healthcheck:
        test: ["CMD-SHELL", "curl -f http://localhost:8081/subjects"]
        interval: 30s
        timeout: 10s
        retries: 5
      networks:
        energy:

  control-center:
      image: confluentinc/cp-enterprise-control-center:7.5.3
      hostname: control-center
      container_name: control-center
      depends_on:
        broker:
          condition: service_healthy
        schema-registry:
          condition: service_healthy
      ports:
        - "9021:9021"
      environment:
        CONTROL_CENTER_BOOTSTRAP_SERVERS: broker:29092
        CONTROL_CENTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
        CONTROL_CENTER_REPLICATION_FACTOR: 1
        CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 2
        CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
        CONFLUENT_METRICS_TOPIC_REPLICATION: 1
        CONFLIENT_METRICS_ENABLE: "false"
        PORT: 9021
      healthcheck:
        test: [ "CMD", "curl", "-f", "http://localhost:9021/health" ]
        interval: 30s
        timeout: 10s
        retries: 5
      networks:
        energy:
networks:
  energy:
    name: energy
    driver: bridge